{"version":3,"file":"bundle.js","sources":["../../node_modules/svelte/internal/index.mjs","../../src/HousieChart.svelte","../../src/HousieTicket.svelte","../../src/App.svelte","../../src/main.js"],"sourcesContent":["function noop() { }\nconst identity = x => x;\nfunction assign(tar, src) {\n    // @ts-ignore\n    for (const k in src)\n        tar[k] = src[k];\n    return tar;\n}\nfunction is_promise(value) {\n    return value && typeof value === 'object' && typeof value.then === 'function';\n}\nfunction add_location(element, file, line, column, char) {\n    element.__svelte_meta = {\n        loc: { file, line, column, char }\n    };\n}\nfunction run(fn) {\n    return fn();\n}\nfunction blank_object() {\n    return Object.create(null);\n}\nfunction run_all(fns) {\n    fns.forEach(run);\n}\nfunction is_function(thing) {\n    return typeof thing === 'function';\n}\nfunction safe_not_equal(a, b) {\n    return a != a ? b == b : a !== b || ((a && typeof a === 'object') || typeof a === 'function');\n}\nfunction not_equal(a, b) {\n    return a != a ? b == b : a !== b;\n}\nfunction validate_store(store, name) {\n    if (store != null && typeof store.subscribe !== 'function') {\n        throw new Error(`'${name}' is not a store with a 'subscribe' method`);\n    }\n}\nfunction subscribe(store, ...callbacks) {\n    if (store == null) {\n        return noop;\n    }\n    const unsub = store.subscribe(...callbacks);\n    return unsub.unsubscribe ? () => unsub.unsubscribe() : unsub;\n}\nfunction get_store_value(store) {\n    let value;\n    subscribe(store, _ => value = _)();\n    return value;\n}\nfunction component_subscribe(component, store, callback) {\n    component.$$.on_destroy.push(subscribe(store, callback));\n}\nfunction create_slot(definition, ctx, $$scope, fn) {\n    if (definition) {\n        const slot_ctx = get_slot_context(definition, ctx, $$scope, fn);\n        return definition[0](slot_ctx);\n    }\n}\nfunction get_slot_context(definition, ctx, $$scope, fn) {\n    return definition[1] && fn\n        ? assign($$scope.ctx.slice(), definition[1](fn(ctx)))\n        : $$scope.ctx;\n}\nfunction get_slot_changes(definition, $$scope, dirty, fn) {\n    if (definition[2] && fn) {\n        const lets = definition[2](fn(dirty));\n        if ($$scope.dirty === undefined) {\n            return lets;\n        }\n        if (typeof lets === 'object') {\n            const merged = [];\n            const len = Math.max($$scope.dirty.length, lets.length);\n            for (let i = 0; i < len; i += 1) {\n                merged[i] = $$scope.dirty[i] | lets[i];\n            }\n            return merged;\n        }\n        return $$scope.dirty | lets;\n    }\n    return $$scope.dirty;\n}\nfunction exclude_internal_props(props) {\n    const result = {};\n    for (const k in props)\n        if (k[0] !== '$')\n            result[k] = props[k];\n    return result;\n}\nfunction compute_rest_props(props, keys) {\n    const rest = {};\n    keys = new Set(keys);\n    for (const k in props)\n        if (!keys.has(k) && k[0] !== '$')\n            rest[k] = props[k];\n    return rest;\n}\nfunction once(fn) {\n    let ran = false;\n    return function (...args) {\n        if (ran)\n            return;\n        ran = true;\n        fn.call(this, ...args);\n    };\n}\nfunction null_to_empty(value) {\n    return value == null ? '' : value;\n}\nfunction set_store_value(store, ret, value = ret) {\n    store.set(value);\n    return ret;\n}\nconst has_prop = (obj, prop) => Object.prototype.hasOwnProperty.call(obj, prop);\nfunction action_destroyer(action_result) {\n    return action_result && is_function(action_result.destroy) ? action_result.destroy : noop;\n}\n\nconst is_client = typeof window !== 'undefined';\nlet now = is_client\n    ? () => window.performance.now()\n    : () => Date.now();\nlet raf = is_client ? cb => requestAnimationFrame(cb) : noop;\n// used internally for testing\nfunction set_now(fn) {\n    now = fn;\n}\nfunction set_raf(fn) {\n    raf = fn;\n}\n\nconst tasks = new Set();\nfunction run_tasks(now) {\n    tasks.forEach(task => {\n        if (!task.c(now)) {\n            tasks.delete(task);\n            task.f();\n        }\n    });\n    if (tasks.size !== 0)\n        raf(run_tasks);\n}\n/**\n * For testing purposes only!\n */\nfunction clear_loops() {\n    tasks.clear();\n}\n/**\n * Creates a new task that runs on each raf frame\n * until it returns a falsy value or is aborted\n */\nfunction loop(callback) {\n    let task;\n    if (tasks.size === 0)\n        raf(run_tasks);\n    return {\n        promise: new Promise(fulfill => {\n            tasks.add(task = { c: callback, f: fulfill });\n        }),\n        abort() {\n            tasks.delete(task);\n        }\n    };\n}\n\nfunction append(target, node) {\n    target.appendChild(node);\n}\nfunction insert(target, node, anchor) {\n    target.insertBefore(node, anchor || null);\n}\nfunction detach(node) {\n    node.parentNode.removeChild(node);\n}\nfunction destroy_each(iterations, detaching) {\n    for (let i = 0; i < iterations.length; i += 1) {\n        if (iterations[i])\n            iterations[i].d(detaching);\n    }\n}\nfunction element(name) {\n    return document.createElement(name);\n}\nfunction element_is(name, is) {\n    return document.createElement(name, { is });\n}\nfunction object_without_properties(obj, exclude) {\n    const target = {};\n    for (const k in obj) {\n        if (has_prop(obj, k)\n            // @ts-ignore\n            && exclude.indexOf(k) === -1) {\n            // @ts-ignore\n            target[k] = obj[k];\n        }\n    }\n    return target;\n}\nfunction svg_element(name) {\n    return document.createElementNS('http://www.w3.org/2000/svg', name);\n}\nfunction text(data) {\n    return document.createTextNode(data);\n}\nfunction space() {\n    return text(' ');\n}\nfunction empty() {\n    return text('');\n}\nfunction listen(node, event, handler, options) {\n    node.addEventListener(event, handler, options);\n    return () => node.removeEventListener(event, handler, options);\n}\nfunction prevent_default(fn) {\n    return function (event) {\n        event.preventDefault();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction stop_propagation(fn) {\n    return function (event) {\n        event.stopPropagation();\n        // @ts-ignore\n        return fn.call(this, event);\n    };\n}\nfunction self(fn) {\n    return function (event) {\n        // @ts-ignore\n        if (event.target === this)\n            fn.call(this, event);\n    };\n}\nfunction attr(node, attribute, value) {\n    if (value == null)\n        node.removeAttribute(attribute);\n    else if (node.getAttribute(attribute) !== value)\n        node.setAttribute(attribute, value);\n}\nfunction set_attributes(node, attributes) {\n    // @ts-ignore\n    const descriptors = Object.getOwnPropertyDescriptors(node.__proto__);\n    for (const key in attributes) {\n        if (attributes[key] == null) {\n            node.removeAttribute(key);\n        }\n        else if (key === 'style') {\n            node.style.cssText = attributes[key];\n        }\n        else if (key === '__value' || descriptors[key] && descriptors[key].set) {\n            node[key] = attributes[key];\n        }\n        else {\n            attr(node, key, attributes[key]);\n        }\n    }\n}\nfunction set_svg_attributes(node, attributes) {\n    for (const key in attributes) {\n        attr(node, key, attributes[key]);\n    }\n}\nfunction set_custom_element_data(node, prop, value) {\n    if (prop in node) {\n        node[prop] = value;\n    }\n    else {\n        attr(node, prop, value);\n    }\n}\nfunction xlink_attr(node, attribute, value) {\n    node.setAttributeNS('http://www.w3.org/1999/xlink', attribute, value);\n}\nfunction get_binding_group_value(group) {\n    const value = [];\n    for (let i = 0; i < group.length; i += 1) {\n        if (group[i].checked)\n            value.push(group[i].__value);\n    }\n    return value;\n}\nfunction to_number(value) {\n    return value === '' ? undefined : +value;\n}\nfunction time_ranges_to_array(ranges) {\n    const array = [];\n    for (let i = 0; i < ranges.length; i += 1) {\n        array.push({ start: ranges.start(i), end: ranges.end(i) });\n    }\n    return array;\n}\nfunction children(element) {\n    return Array.from(element.childNodes);\n}\nfunction claim_element(nodes, name, attributes, svg) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeName === name) {\n            let j = 0;\n            while (j < node.attributes.length) {\n                const attribute = node.attributes[j];\n                if (attributes[attribute.name]) {\n                    j++;\n                }\n                else {\n                    node.removeAttribute(attribute.name);\n                }\n            }\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return svg ? svg_element(name) : element(name);\n}\nfunction claim_text(nodes, data) {\n    for (let i = 0; i < nodes.length; i += 1) {\n        const node = nodes[i];\n        if (node.nodeType === 3) {\n            node.data = '' + data;\n            return nodes.splice(i, 1)[0];\n        }\n    }\n    return text(data);\n}\nfunction claim_space(nodes) {\n    return claim_text(nodes, ' ');\n}\nfunction set_data(text, data) {\n    data = '' + data;\n    if (text.data !== data)\n        text.data = data;\n}\nfunction set_input_value(input, value) {\n    if (value != null || input.value) {\n        input.value = value;\n    }\n}\nfunction set_input_type(input, type) {\n    try {\n        input.type = type;\n    }\n    catch (e) {\n        // do nothing\n    }\n}\nfunction set_style(node, key, value, important) {\n    node.style.setProperty(key, value, important ? 'important' : '');\n}\nfunction select_option(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        if (option.__value === value) {\n            option.selected = true;\n            return;\n        }\n    }\n}\nfunction select_options(select, value) {\n    for (let i = 0; i < select.options.length; i += 1) {\n        const option = select.options[i];\n        option.selected = ~value.indexOf(option.__value);\n    }\n}\nfunction select_value(select) {\n    const selected_option = select.querySelector(':checked') || select.options[0];\n    return selected_option && selected_option.__value;\n}\nfunction select_multiple_value(select) {\n    return [].map.call(select.querySelectorAll(':checked'), option => option.__value);\n}\nfunction add_resize_listener(element, fn) {\n    if (getComputedStyle(element).position === 'static') {\n        element.style.position = 'relative';\n    }\n    const object = document.createElement('object');\n    object.setAttribute('style', 'display: block; position: absolute; top: 0; left: 0; height: 100%; width: 100%; overflow: hidden; pointer-events: none; z-index: -1;');\n    object.setAttribute('aria-hidden', 'true');\n    object.type = 'text/html';\n    object.tabIndex = -1;\n    let win;\n    object.onload = () => {\n        win = object.contentDocument.defaultView;\n        win.addEventListener('resize', fn);\n    };\n    if (/Trident/.test(navigator.userAgent)) {\n        element.appendChild(object);\n        object.data = 'about:blank';\n    }\n    else {\n        object.data = 'about:blank';\n        element.appendChild(object);\n    }\n    return {\n        cancel: () => {\n            win && win.removeEventListener && win.removeEventListener('resize', fn);\n            element.removeChild(object);\n        }\n    };\n}\nfunction toggle_class(element, name, toggle) {\n    element.classList[toggle ? 'add' : 'remove'](name);\n}\nfunction custom_event(type, detail) {\n    const e = document.createEvent('CustomEvent');\n    e.initCustomEvent(type, false, false, detail);\n    return e;\n}\nfunction query_selector_all(selector, parent = document.body) {\n    return Array.from(parent.querySelectorAll(selector));\n}\nclass HtmlTag {\n    constructor(html, anchor = null) {\n        this.e = element('div');\n        this.a = anchor;\n        this.u(html);\n    }\n    m(target, anchor = null) {\n        for (let i = 0; i < this.n.length; i += 1) {\n            insert(target, this.n[i], anchor);\n        }\n        this.t = target;\n    }\n    u(html) {\n        this.e.innerHTML = html;\n        this.n = Array.from(this.e.childNodes);\n    }\n    p(html) {\n        this.d();\n        this.u(html);\n        this.m(this.t, this.a);\n    }\n    d() {\n        this.n.forEach(detach);\n    }\n}\n\nconst active_docs = new Set();\nlet active = 0;\n// https://github.com/darkskyapp/string-hash/blob/master/index.js\nfunction hash(str) {\n    let hash = 5381;\n    let i = str.length;\n    while (i--)\n        hash = ((hash << 5) - hash) ^ str.charCodeAt(i);\n    return hash >>> 0;\n}\nfunction create_rule(node, a, b, duration, delay, ease, fn, uid = 0) {\n    const step = 16.666 / duration;\n    let keyframes = '{\\n';\n    for (let p = 0; p <= 1; p += step) {\n        const t = a + (b - a) * ease(p);\n        keyframes += p * 100 + `%{${fn(t, 1 - t)}}\\n`;\n    }\n    const rule = keyframes + `100% {${fn(b, 1 - b)}}\\n}`;\n    const name = `__svelte_${hash(rule)}_${uid}`;\n    const doc = node.ownerDocument;\n    active_docs.add(doc);\n    const stylesheet = doc.__svelte_stylesheet || (doc.__svelte_stylesheet = doc.head.appendChild(element('style')).sheet);\n    const current_rules = doc.__svelte_rules || (doc.__svelte_rules = {});\n    if (!current_rules[name]) {\n        current_rules[name] = true;\n        stylesheet.insertRule(`@keyframes ${name} ${rule}`, stylesheet.cssRules.length);\n    }\n    const animation = node.style.animation || '';\n    node.style.animation = `${animation ? `${animation}, ` : ``}${name} ${duration}ms linear ${delay}ms 1 both`;\n    active += 1;\n    return name;\n}\nfunction delete_rule(node, name) {\n    const previous = (node.style.animation || '').split(', ');\n    const next = previous.filter(name\n        ? anim => anim.indexOf(name) < 0 // remove specific animation\n        : anim => anim.indexOf('__svelte') === -1 // remove all Svelte animations\n    );\n    const deleted = previous.length - next.length;\n    if (deleted) {\n        node.style.animation = next.join(', ');\n        active -= deleted;\n        if (!active)\n            clear_rules();\n    }\n}\nfunction clear_rules() {\n    raf(() => {\n        if (active)\n            return;\n        active_docs.forEach(doc => {\n            const stylesheet = doc.__svelte_stylesheet;\n            let i = stylesheet.cssRules.length;\n            while (i--)\n                stylesheet.deleteRule(i);\n            doc.__svelte_rules = {};\n        });\n        active_docs.clear();\n    });\n}\n\nfunction create_animation(node, from, fn, params) {\n    if (!from)\n        return noop;\n    const to = node.getBoundingClientRect();\n    if (from.left === to.left && from.right === to.right && from.top === to.top && from.bottom === to.bottom)\n        return noop;\n    const { delay = 0, duration = 300, easing = identity, \n    // @ts-ignore todo: should this be separated from destructuring? Or start/end added to public api and documentation?\n    start: start_time = now() + delay, \n    // @ts-ignore todo:\n    end = start_time + duration, tick = noop, css } = fn(node, { from, to }, params);\n    let running = true;\n    let started = false;\n    let name;\n    function start() {\n        if (css) {\n            name = create_rule(node, 0, 1, duration, delay, easing, css);\n        }\n        if (!delay) {\n            started = true;\n        }\n    }\n    function stop() {\n        if (css)\n            delete_rule(node, name);\n        running = false;\n    }\n    loop(now => {\n        if (!started && now >= start_time) {\n            started = true;\n        }\n        if (started && now >= end) {\n            tick(1, 0);\n            stop();\n        }\n        if (!running) {\n            return false;\n        }\n        if (started) {\n            const p = now - start_time;\n            const t = 0 + 1 * easing(p / duration);\n            tick(t, 1 - t);\n        }\n        return true;\n    });\n    start();\n    tick(0, 1);\n    return stop;\n}\nfunction fix_position(node) {\n    const style = getComputedStyle(node);\n    if (style.position !== 'absolute' && style.position !== 'fixed') {\n        const { width, height } = style;\n        const a = node.getBoundingClientRect();\n        node.style.position = 'absolute';\n        node.style.width = width;\n        node.style.height = height;\n        add_transform(node, a);\n    }\n}\nfunction add_transform(node, a) {\n    const b = node.getBoundingClientRect();\n    if (a.left !== b.left || a.top !== b.top) {\n        const style = getComputedStyle(node);\n        const transform = style.transform === 'none' ? '' : style.transform;\n        node.style.transform = `${transform} translate(${a.left - b.left}px, ${a.top - b.top}px)`;\n    }\n}\n\nlet current_component;\nfunction set_current_component(component) {\n    current_component = component;\n}\nfunction get_current_component() {\n    if (!current_component)\n        throw new Error(`Function called outside component initialization`);\n    return current_component;\n}\nfunction beforeUpdate(fn) {\n    get_current_component().$$.before_update.push(fn);\n}\nfunction onMount(fn) {\n    get_current_component().$$.on_mount.push(fn);\n}\nfunction afterUpdate(fn) {\n    get_current_component().$$.after_update.push(fn);\n}\nfunction onDestroy(fn) {\n    get_current_component().$$.on_destroy.push(fn);\n}\nfunction createEventDispatcher() {\n    const component = get_current_component();\n    return (type, detail) => {\n        const callbacks = component.$$.callbacks[type];\n        if (callbacks) {\n            // TODO are there situations where events could be dispatched\n            // in a server (non-DOM) environment?\n            const event = custom_event(type, detail);\n            callbacks.slice().forEach(fn => {\n                fn.call(component, event);\n            });\n        }\n    };\n}\nfunction setContext(key, context) {\n    get_current_component().$$.context.set(key, context);\n}\nfunction getContext(key) {\n    return get_current_component().$$.context.get(key);\n}\n// TODO figure out if we still want to support\n// shorthand events, or if we want to implement\n// a real bubbling mechanism\nfunction bubble(component, event) {\n    const callbacks = component.$$.callbacks[event.type];\n    if (callbacks) {\n        callbacks.slice().forEach(fn => fn(event));\n    }\n}\n\nconst dirty_components = [];\nconst intros = { enabled: false };\nconst binding_callbacks = [];\nconst render_callbacks = [];\nconst flush_callbacks = [];\nconst resolved_promise = Promise.resolve();\nlet update_scheduled = false;\nfunction schedule_update() {\n    if (!update_scheduled) {\n        update_scheduled = true;\n        resolved_promise.then(flush);\n    }\n}\nfunction tick() {\n    schedule_update();\n    return resolved_promise;\n}\nfunction add_render_callback(fn) {\n    render_callbacks.push(fn);\n}\nfunction add_flush_callback(fn) {\n    flush_callbacks.push(fn);\n}\nlet flushing = false;\nconst seen_callbacks = new Set();\nfunction flush() {\n    if (flushing)\n        return;\n    flushing = true;\n    do {\n        // first, call beforeUpdate functions\n        // and update components\n        for (let i = 0; i < dirty_components.length; i += 1) {\n            const component = dirty_components[i];\n            set_current_component(component);\n            update(component.$$);\n        }\n        dirty_components.length = 0;\n        while (binding_callbacks.length)\n            binding_callbacks.pop()();\n        // then, once components are updated, call\n        // afterUpdate functions. This may cause\n        // subsequent updates...\n        for (let i = 0; i < render_callbacks.length; i += 1) {\n            const callback = render_callbacks[i];\n            if (!seen_callbacks.has(callback)) {\n                // ...so guard against infinite loops\n                seen_callbacks.add(callback);\n                callback();\n            }\n        }\n        render_callbacks.length = 0;\n    } while (dirty_components.length);\n    while (flush_callbacks.length) {\n        flush_callbacks.pop()();\n    }\n    update_scheduled = false;\n    flushing = false;\n    seen_callbacks.clear();\n}\nfunction update($$) {\n    if ($$.fragment !== null) {\n        $$.update();\n        run_all($$.before_update);\n        const dirty = $$.dirty;\n        $$.dirty = [-1];\n        $$.fragment && $$.fragment.p($$.ctx, dirty);\n        $$.after_update.forEach(add_render_callback);\n    }\n}\n\nlet promise;\nfunction wait() {\n    if (!promise) {\n        promise = Promise.resolve();\n        promise.then(() => {\n            promise = null;\n        });\n    }\n    return promise;\n}\nfunction dispatch(node, direction, kind) {\n    node.dispatchEvent(custom_event(`${direction ? 'intro' : 'outro'}${kind}`));\n}\nconst outroing = new Set();\nlet outros;\nfunction group_outros() {\n    outros = {\n        r: 0,\n        c: [],\n        p: outros // parent group\n    };\n}\nfunction check_outros() {\n    if (!outros.r) {\n        run_all(outros.c);\n    }\n    outros = outros.p;\n}\nfunction transition_in(block, local) {\n    if (block && block.i) {\n        outroing.delete(block);\n        block.i(local);\n    }\n}\nfunction transition_out(block, local, detach, callback) {\n    if (block && block.o) {\n        if (outroing.has(block))\n            return;\n        outroing.add(block);\n        outros.c.push(() => {\n            outroing.delete(block);\n            if (callback) {\n                if (detach)\n                    block.d(1);\n                callback();\n            }\n        });\n        block.o(local);\n    }\n}\nconst null_transition = { duration: 0 };\nfunction create_in_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = false;\n    let animation_name;\n    let task;\n    let uid = 0;\n    function cleanup() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 0, 1, duration, delay, easing, css, uid++);\n        tick(0, 1);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        if (task)\n            task.abort();\n        running = true;\n        add_render_callback(() => dispatch(node, true, 'start'));\n        task = loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(1, 0);\n                    dispatch(node, true, 'end');\n                    cleanup();\n                    return running = false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(t, 1 - t);\n                }\n            }\n            return running;\n        });\n    }\n    let started = false;\n    return {\n        start() {\n            if (started)\n                return;\n            delete_rule(node);\n            if (is_function(config)) {\n                config = config();\n                wait().then(go);\n            }\n            else {\n                go();\n            }\n        },\n        invalidate() {\n            started = false;\n        },\n        end() {\n            if (running) {\n                cleanup();\n                running = false;\n            }\n        }\n    };\n}\nfunction create_out_transition(node, fn, params) {\n    let config = fn(node, params);\n    let running = true;\n    let animation_name;\n    const group = outros;\n    group.r += 1;\n    function go() {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        if (css)\n            animation_name = create_rule(node, 1, 0, duration, delay, easing, css);\n        const start_time = now() + delay;\n        const end_time = start_time + duration;\n        add_render_callback(() => dispatch(node, false, 'start'));\n        loop(now => {\n            if (running) {\n                if (now >= end_time) {\n                    tick(0, 1);\n                    dispatch(node, false, 'end');\n                    if (!--group.r) {\n                        // this will result in `end()` being called,\n                        // so we don't need to clean up here\n                        run_all(group.c);\n                    }\n                    return false;\n                }\n                if (now >= start_time) {\n                    const t = easing((now - start_time) / duration);\n                    tick(1 - t, t);\n                }\n            }\n            return running;\n        });\n    }\n    if (is_function(config)) {\n        wait().then(() => {\n            // @ts-ignore\n            config = config();\n            go();\n        });\n    }\n    else {\n        go();\n    }\n    return {\n        end(reset) {\n            if (reset && config.tick) {\n                config.tick(1, 0);\n            }\n            if (running) {\n                if (animation_name)\n                    delete_rule(node, animation_name);\n                running = false;\n            }\n        }\n    };\n}\nfunction create_bidirectional_transition(node, fn, params, intro) {\n    let config = fn(node, params);\n    let t = intro ? 0 : 1;\n    let running_program = null;\n    let pending_program = null;\n    let animation_name = null;\n    function clear_animation() {\n        if (animation_name)\n            delete_rule(node, animation_name);\n    }\n    function init(program, duration) {\n        const d = program.b - t;\n        duration *= Math.abs(d);\n        return {\n            a: t,\n            b: program.b,\n            d,\n            duration,\n            start: program.start,\n            end: program.start + duration,\n            group: program.group\n        };\n    }\n    function go(b) {\n        const { delay = 0, duration = 300, easing = identity, tick = noop, css } = config || null_transition;\n        const program = {\n            start: now() + delay,\n            b\n        };\n        if (!b) {\n            // @ts-ignore todo: improve typings\n            program.group = outros;\n            outros.r += 1;\n        }\n        if (running_program) {\n            pending_program = program;\n        }\n        else {\n            // if this is an intro, and there's a delay, we need to do\n            // an initial tick and/or apply CSS animation immediately\n            if (css) {\n                clear_animation();\n                animation_name = create_rule(node, t, b, duration, delay, easing, css);\n            }\n            if (b)\n                tick(0, 1);\n            running_program = init(program, duration);\n            add_render_callback(() => dispatch(node, b, 'start'));\n            loop(now => {\n                if (pending_program && now > pending_program.start) {\n                    running_program = init(pending_program, duration);\n                    pending_program = null;\n                    dispatch(node, running_program.b, 'start');\n                    if (css) {\n                        clear_animation();\n                        animation_name = create_rule(node, t, running_program.b, running_program.duration, 0, easing, config.css);\n                    }\n                }\n                if (running_program) {\n                    if (now >= running_program.end) {\n                        tick(t = running_program.b, 1 - t);\n                        dispatch(node, running_program.b, 'end');\n                        if (!pending_program) {\n                            // we're done\n                            if (running_program.b) {\n                                // intro — we can tidy up immediately\n                                clear_animation();\n                            }\n                            else {\n                                // outro — needs to be coordinated\n                                if (!--running_program.group.r)\n                                    run_all(running_program.group.c);\n                            }\n                        }\n                        running_program = null;\n                    }\n                    else if (now >= running_program.start) {\n                        const p = now - running_program.start;\n                        t = running_program.a + running_program.d * easing(p / running_program.duration);\n                        tick(t, 1 - t);\n                    }\n                }\n                return !!(running_program || pending_program);\n            });\n        }\n    }\n    return {\n        run(b) {\n            if (is_function(config)) {\n                wait().then(() => {\n                    // @ts-ignore\n                    config = config();\n                    go(b);\n                });\n            }\n            else {\n                go(b);\n            }\n        },\n        end() {\n            clear_animation();\n            running_program = pending_program = null;\n        }\n    };\n}\n\nfunction handle_promise(promise, info) {\n    const token = info.token = {};\n    function update(type, index, key, value) {\n        if (info.token !== token)\n            return;\n        info.resolved = value;\n        let child_ctx = info.ctx;\n        if (key !== undefined) {\n            child_ctx = child_ctx.slice();\n            child_ctx[key] = value;\n        }\n        const block = type && (info.current = type)(child_ctx);\n        let needs_flush = false;\n        if (info.block) {\n            if (info.blocks) {\n                info.blocks.forEach((block, i) => {\n                    if (i !== index && block) {\n                        group_outros();\n                        transition_out(block, 1, 1, () => {\n                            info.blocks[i] = null;\n                        });\n                        check_outros();\n                    }\n                });\n            }\n            else {\n                info.block.d(1);\n            }\n            block.c();\n            transition_in(block, 1);\n            block.m(info.mount(), info.anchor);\n            needs_flush = true;\n        }\n        info.block = block;\n        if (info.blocks)\n            info.blocks[index] = block;\n        if (needs_flush) {\n            flush();\n        }\n    }\n    if (is_promise(promise)) {\n        const current_component = get_current_component();\n        promise.then(value => {\n            set_current_component(current_component);\n            update(info.then, 1, info.value, value);\n            set_current_component(null);\n        }, error => {\n            set_current_component(current_component);\n            update(info.catch, 2, info.error, error);\n            set_current_component(null);\n        });\n        // if we previously had a then/catch block, destroy it\n        if (info.current !== info.pending) {\n            update(info.pending, 0);\n            return true;\n        }\n    }\n    else {\n        if (info.current !== info.then) {\n            update(info.then, 1, info.value, promise);\n            return true;\n        }\n        info.resolved = promise;\n    }\n}\n\nconst globals = (typeof window !== 'undefined' ? window : global);\n\nfunction destroy_block(block, lookup) {\n    block.d(1);\n    lookup.delete(block.key);\n}\nfunction outro_and_destroy_block(block, lookup) {\n    transition_out(block, 1, 1, () => {\n        lookup.delete(block.key);\n    });\n}\nfunction fix_and_destroy_block(block, lookup) {\n    block.f();\n    destroy_block(block, lookup);\n}\nfunction fix_and_outro_and_destroy_block(block, lookup) {\n    block.f();\n    outro_and_destroy_block(block, lookup);\n}\nfunction update_keyed_each(old_blocks, dirty, get_key, dynamic, ctx, list, lookup, node, destroy, create_each_block, next, get_context) {\n    let o = old_blocks.length;\n    let n = list.length;\n    let i = o;\n    const old_indexes = {};\n    while (i--)\n        old_indexes[old_blocks[i].key] = i;\n    const new_blocks = [];\n    const new_lookup = new Map();\n    const deltas = new Map();\n    i = n;\n    while (i--) {\n        const child_ctx = get_context(ctx, list, i);\n        const key = get_key(child_ctx);\n        let block = lookup.get(key);\n        if (!block) {\n            block = create_each_block(key, child_ctx);\n            block.c();\n        }\n        else if (dynamic) {\n            block.p(child_ctx, dirty);\n        }\n        new_lookup.set(key, new_blocks[i] = block);\n        if (key in old_indexes)\n            deltas.set(key, Math.abs(i - old_indexes[key]));\n    }\n    const will_move = new Set();\n    const did_move = new Set();\n    function insert(block) {\n        transition_in(block, 1);\n        block.m(node, next, lookup.has(block.key));\n        lookup.set(block.key, block);\n        next = block.first;\n        n--;\n    }\n    while (o && n) {\n        const new_block = new_blocks[n - 1];\n        const old_block = old_blocks[o - 1];\n        const new_key = new_block.key;\n        const old_key = old_block.key;\n        if (new_block === old_block) {\n            // do nothing\n            next = new_block.first;\n            o--;\n            n--;\n        }\n        else if (!new_lookup.has(old_key)) {\n            // remove old block\n            destroy(old_block, lookup);\n            o--;\n        }\n        else if (!lookup.has(new_key) || will_move.has(new_key)) {\n            insert(new_block);\n        }\n        else if (did_move.has(old_key)) {\n            o--;\n        }\n        else if (deltas.get(new_key) > deltas.get(old_key)) {\n            did_move.add(new_key);\n            insert(new_block);\n        }\n        else {\n            will_move.add(old_key);\n            o--;\n        }\n    }\n    while (o--) {\n        const old_block = old_blocks[o];\n        if (!new_lookup.has(old_block.key))\n            destroy(old_block, lookup);\n    }\n    while (n)\n        insert(new_blocks[n - 1]);\n    return new_blocks;\n}\nfunction validate_each_keys(ctx, list, get_context, get_key) {\n    const keys = new Set();\n    for (let i = 0; i < list.length; i++) {\n        const key = get_key(get_context(ctx, list, i));\n        if (keys.has(key)) {\n            throw new Error(`Cannot have duplicate keys in a keyed each`);\n        }\n        keys.add(key);\n    }\n}\n\nfunction get_spread_update(levels, updates) {\n    const update = {};\n    const to_null_out = {};\n    const accounted_for = { $$scope: 1 };\n    let i = levels.length;\n    while (i--) {\n        const o = levels[i];\n        const n = updates[i];\n        if (n) {\n            for (const key in o) {\n                if (!(key in n))\n                    to_null_out[key] = 1;\n            }\n            for (const key in n) {\n                if (!accounted_for[key]) {\n                    update[key] = n[key];\n                    accounted_for[key] = 1;\n                }\n            }\n            levels[i] = n;\n        }\n        else {\n            for (const key in o) {\n                accounted_for[key] = 1;\n            }\n        }\n    }\n    for (const key in to_null_out) {\n        if (!(key in update))\n            update[key] = undefined;\n    }\n    return update;\n}\nfunction get_spread_object(spread_props) {\n    return typeof spread_props === 'object' && spread_props !== null ? spread_props : {};\n}\n\n// source: https://html.spec.whatwg.org/multipage/indices.html\nconst boolean_attributes = new Set([\n    'allowfullscreen',\n    'allowpaymentrequest',\n    'async',\n    'autofocus',\n    'autoplay',\n    'checked',\n    'controls',\n    'default',\n    'defer',\n    'disabled',\n    'formnovalidate',\n    'hidden',\n    'ismap',\n    'loop',\n    'multiple',\n    'muted',\n    'nomodule',\n    'novalidate',\n    'open',\n    'playsinline',\n    'readonly',\n    'required',\n    'reversed',\n    'selected'\n]);\n\nconst invalid_attribute_name_character = /[\\s'\">/=\\u{FDD0}-\\u{FDEF}\\u{FFFE}\\u{FFFF}\\u{1FFFE}\\u{1FFFF}\\u{2FFFE}\\u{2FFFF}\\u{3FFFE}\\u{3FFFF}\\u{4FFFE}\\u{4FFFF}\\u{5FFFE}\\u{5FFFF}\\u{6FFFE}\\u{6FFFF}\\u{7FFFE}\\u{7FFFF}\\u{8FFFE}\\u{8FFFF}\\u{9FFFE}\\u{9FFFF}\\u{AFFFE}\\u{AFFFF}\\u{BFFFE}\\u{BFFFF}\\u{CFFFE}\\u{CFFFF}\\u{DFFFE}\\u{DFFFF}\\u{EFFFE}\\u{EFFFF}\\u{FFFFE}\\u{FFFFF}\\u{10FFFE}\\u{10FFFF}]/u;\n// https://html.spec.whatwg.org/multipage/syntax.html#attributes-2\n// https://infra.spec.whatwg.org/#noncharacter\nfunction spread(args, classes_to_add) {\n    const attributes = Object.assign({}, ...args);\n    if (classes_to_add) {\n        if (attributes.class == null) {\n            attributes.class = classes_to_add;\n        }\n        else {\n            attributes.class += ' ' + classes_to_add;\n        }\n    }\n    let str = '';\n    Object.keys(attributes).forEach(name => {\n        if (invalid_attribute_name_character.test(name))\n            return;\n        const value = attributes[name];\n        if (value === true)\n            str += \" \" + name;\n        else if (boolean_attributes.has(name.toLowerCase())) {\n            if (value)\n                str += \" \" + name;\n        }\n        else if (value != null) {\n            str += ` ${name}=\"${String(value).replace(/\"/g, '&#34;').replace(/'/g, '&#39;')}\"`;\n        }\n    });\n    return str;\n}\nconst escaped = {\n    '\"': '&quot;',\n    \"'\": '&#39;',\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;'\n};\nfunction escape(html) {\n    return String(html).replace(/[\"'&<>]/g, match => escaped[match]);\n}\nfunction each(items, fn) {\n    let str = '';\n    for (let i = 0; i < items.length; i += 1) {\n        str += fn(items[i], i);\n    }\n    return str;\n}\nconst missing_component = {\n    $$render: () => ''\n};\nfunction validate_component(component, name) {\n    if (!component || !component.$$render) {\n        if (name === 'svelte:component')\n            name += ' this={...}';\n        throw new Error(`<${name}> is not a valid SSR component. You may need to review your build config to ensure that dependencies are compiled, rather than imported as pre-compiled modules`);\n    }\n    return component;\n}\nfunction debug(file, line, column, values) {\n    console.log(`{@debug} ${file ? file + ' ' : ''}(${line}:${column})`); // eslint-disable-line no-console\n    console.log(values); // eslint-disable-line no-console\n    return '';\n}\nlet on_destroy;\nfunction create_ssr_component(fn) {\n    function $$render(result, props, bindings, slots) {\n        const parent_component = current_component;\n        const $$ = {\n            on_destroy,\n            context: new Map(parent_component ? parent_component.$$.context : []),\n            // these will be immediately discarded\n            on_mount: [],\n            before_update: [],\n            after_update: [],\n            callbacks: blank_object()\n        };\n        set_current_component({ $$ });\n        const html = fn(result, props, bindings, slots);\n        set_current_component(parent_component);\n        return html;\n    }\n    return {\n        render: (props = {}, options = {}) => {\n            on_destroy = [];\n            const result = { title: '', head: '', css: new Set() };\n            const html = $$render(result, props, {}, options);\n            run_all(on_destroy);\n            return {\n                html,\n                css: {\n                    code: Array.from(result.css).map(css => css.code).join('\\n'),\n                    map: null // TODO\n                },\n                head: result.title + result.head\n            };\n        },\n        $$render\n    };\n}\nfunction add_attribute(name, value, boolean) {\n    if (value == null || (boolean && !value))\n        return '';\n    return ` ${name}${value === true ? '' : `=${typeof value === 'string' ? JSON.stringify(escape(value)) : `\"${value}\"`}`}`;\n}\nfunction add_classes(classes) {\n    return classes ? ` class=\"${classes}\"` : ``;\n}\n\nfunction bind(component, name, callback) {\n    const index = component.$$.props[name];\n    if (index !== undefined) {\n        component.$$.bound[index] = callback;\n        callback(component.$$.ctx[index]);\n    }\n}\nfunction create_component(block) {\n    block && block.c();\n}\nfunction claim_component(block, parent_nodes) {\n    block && block.l(parent_nodes);\n}\nfunction mount_component(component, target, anchor) {\n    const { fragment, on_mount, on_destroy, after_update } = component.$$;\n    fragment && fragment.m(target, anchor);\n    // onMount happens before the initial afterUpdate\n    add_render_callback(() => {\n        const new_on_destroy = on_mount.map(run).filter(is_function);\n        if (on_destroy) {\n            on_destroy.push(...new_on_destroy);\n        }\n        else {\n            // Edge case - component was destroyed immediately,\n            // most likely as a result of a binding initialising\n            run_all(new_on_destroy);\n        }\n        component.$$.on_mount = [];\n    });\n    after_update.forEach(add_render_callback);\n}\nfunction destroy_component(component, detaching) {\n    const $$ = component.$$;\n    if ($$.fragment !== null) {\n        run_all($$.on_destroy);\n        $$.fragment && $$.fragment.d(detaching);\n        // TODO null out other refs, including component.$$ (but need to\n        // preserve final state?)\n        $$.on_destroy = $$.fragment = null;\n        $$.ctx = [];\n    }\n}\nfunction make_dirty(component, i) {\n    if (component.$$.dirty[0] === -1) {\n        dirty_components.push(component);\n        schedule_update();\n        component.$$.dirty.fill(0);\n    }\n    component.$$.dirty[(i / 31) | 0] |= (1 << (i % 31));\n}\nfunction init(component, options, instance, create_fragment, not_equal, props, dirty = [-1]) {\n    const parent_component = current_component;\n    set_current_component(component);\n    const prop_values = options.props || {};\n    const $$ = component.$$ = {\n        fragment: null,\n        ctx: null,\n        // state\n        props,\n        update: noop,\n        not_equal,\n        bound: blank_object(),\n        // lifecycle\n        on_mount: [],\n        on_destroy: [],\n        before_update: [],\n        after_update: [],\n        context: new Map(parent_component ? parent_component.$$.context : []),\n        // everything else\n        callbacks: blank_object(),\n        dirty\n    };\n    let ready = false;\n    $$.ctx = instance\n        ? instance(component, prop_values, (i, ret, ...rest) => {\n            const value = rest.length ? rest[0] : ret;\n            if ($$.ctx && not_equal($$.ctx[i], $$.ctx[i] = value)) {\n                if ($$.bound[i])\n                    $$.bound[i](value);\n                if (ready)\n                    make_dirty(component, i);\n            }\n            return ret;\n        })\n        : [];\n    $$.update();\n    ready = true;\n    run_all($$.before_update);\n    // `false` as a special case of no DOM component\n    $$.fragment = create_fragment ? create_fragment($$.ctx) : false;\n    if (options.target) {\n        if (options.hydrate) {\n            const nodes = children(options.target);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.l(nodes);\n            nodes.forEach(detach);\n        }\n        else {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            $$.fragment && $$.fragment.c();\n        }\n        if (options.intro)\n            transition_in(component.$$.fragment);\n        mount_component(component, options.target, options.anchor);\n        flush();\n    }\n    set_current_component(parent_component);\n}\nlet SvelteElement;\nif (typeof HTMLElement === 'function') {\n    SvelteElement = class extends HTMLElement {\n        constructor() {\n            super();\n            this.attachShadow({ mode: 'open' });\n        }\n        connectedCallback() {\n            // @ts-ignore todo: improve typings\n            for (const key in this.$$.slotted) {\n                // @ts-ignore todo: improve typings\n                this.appendChild(this.$$.slotted[key]);\n            }\n        }\n        attributeChangedCallback(attr, _oldValue, newValue) {\n            this[attr] = newValue;\n        }\n        $destroy() {\n            destroy_component(this, 1);\n            this.$destroy = noop;\n        }\n        $on(type, callback) {\n            // TODO should this delegate to addEventListener?\n            const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n            callbacks.push(callback);\n            return () => {\n                const index = callbacks.indexOf(callback);\n                if (index !== -1)\n                    callbacks.splice(index, 1);\n            };\n        }\n        $set() {\n            // overridden by instance, if it has props\n        }\n    };\n}\nclass SvelteComponent {\n    $destroy() {\n        destroy_component(this, 1);\n        this.$destroy = noop;\n    }\n    $on(type, callback) {\n        const callbacks = (this.$$.callbacks[type] || (this.$$.callbacks[type] = []));\n        callbacks.push(callback);\n        return () => {\n            const index = callbacks.indexOf(callback);\n            if (index !== -1)\n                callbacks.splice(index, 1);\n        };\n    }\n    $set() {\n        // overridden by instance, if it has props\n    }\n}\n\nfunction dispatch_dev(type, detail) {\n    document.dispatchEvent(custom_event(type, Object.assign({ version: '3.20.1' }, detail)));\n}\nfunction append_dev(target, node) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node });\n    append(target, node);\n}\nfunction insert_dev(target, node, anchor) {\n    dispatch_dev(\"SvelteDOMInsert\", { target, node, anchor });\n    insert(target, node, anchor);\n}\nfunction detach_dev(node) {\n    dispatch_dev(\"SvelteDOMRemove\", { node });\n    detach(node);\n}\nfunction detach_between_dev(before, after) {\n    while (before.nextSibling && before.nextSibling !== after) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction detach_before_dev(after) {\n    while (after.previousSibling) {\n        detach_dev(after.previousSibling);\n    }\n}\nfunction detach_after_dev(before) {\n    while (before.nextSibling) {\n        detach_dev(before.nextSibling);\n    }\n}\nfunction listen_dev(node, event, handler, options, has_prevent_default, has_stop_propagation) {\n    const modifiers = options === true ? [\"capture\"] : options ? Array.from(Object.keys(options)) : [];\n    if (has_prevent_default)\n        modifiers.push('preventDefault');\n    if (has_stop_propagation)\n        modifiers.push('stopPropagation');\n    dispatch_dev(\"SvelteDOMAddEventListener\", { node, event, handler, modifiers });\n    const dispose = listen(node, event, handler, options);\n    return () => {\n        dispatch_dev(\"SvelteDOMRemoveEventListener\", { node, event, handler, modifiers });\n        dispose();\n    };\n}\nfunction attr_dev(node, attribute, value) {\n    attr(node, attribute, value);\n    if (value == null)\n        dispatch_dev(\"SvelteDOMRemoveAttribute\", { node, attribute });\n    else\n        dispatch_dev(\"SvelteDOMSetAttribute\", { node, attribute, value });\n}\nfunction prop_dev(node, property, value) {\n    node[property] = value;\n    dispatch_dev(\"SvelteDOMSetProperty\", { node, property, value });\n}\nfunction dataset_dev(node, property, value) {\n    node.dataset[property] = value;\n    dispatch_dev(\"SvelteDOMSetDataset\", { node, property, value });\n}\nfunction set_data_dev(text, data) {\n    data = '' + data;\n    if (text.data === data)\n        return;\n    dispatch_dev(\"SvelteDOMSetData\", { node: text, data });\n    text.data = data;\n}\nfunction validate_each_argument(arg) {\n    if (typeof arg !== 'string' && !(arg && typeof arg === 'object' && 'length' in arg)) {\n        let msg = '{#each} only iterates over array-like objects.';\n        if (typeof Symbol === 'function' && arg && Symbol.iterator in arg) {\n            msg += ' You can use a spread to convert this iterable into an array.';\n        }\n        throw new Error(msg);\n    }\n}\nfunction validate_slots(name, slot, keys) {\n    for (const slot_key of Object.keys(slot)) {\n        if (!~keys.indexOf(slot_key)) {\n            console.warn(`<${name}> received an unexpected slot \"${slot_key}\".`);\n        }\n    }\n}\nclass SvelteComponentDev extends SvelteComponent {\n    constructor(options) {\n        if (!options || (!options.target && !options.$$inline)) {\n            throw new Error(`'target' is a required option`);\n        }\n        super();\n    }\n    $destroy() {\n        super.$destroy();\n        this.$destroy = () => {\n            console.warn(`Component was already destroyed`); // eslint-disable-line no-console\n        };\n    }\n    $capture_state() { }\n    $inject_state() { }\n}\nfunction loop_guard(timeout) {\n    const start = Date.now();\n    return () => {\n        if (Date.now() - start > timeout) {\n            throw new Error(`Infinite loop detected`);\n        }\n    };\n}\n\nexport { HtmlTag, SvelteComponent, SvelteComponentDev, SvelteElement, action_destroyer, add_attribute, add_classes, add_flush_callback, add_location, add_render_callback, add_resize_listener, add_transform, afterUpdate, append, append_dev, assign, attr, attr_dev, beforeUpdate, bind, binding_callbacks, blank_object, bubble, check_outros, children, claim_component, claim_element, claim_space, claim_text, clear_loops, component_subscribe, compute_rest_props, createEventDispatcher, create_animation, create_bidirectional_transition, create_component, create_in_transition, create_out_transition, create_slot, create_ssr_component, current_component, custom_event, dataset_dev, debug, destroy_block, destroy_component, destroy_each, detach, detach_after_dev, detach_before_dev, detach_between_dev, detach_dev, dirty_components, dispatch_dev, each, element, element_is, empty, escape, escaped, exclude_internal_props, fix_and_destroy_block, fix_and_outro_and_destroy_block, fix_position, flush, getContext, get_binding_group_value, get_current_component, get_slot_changes, get_slot_context, get_spread_object, get_spread_update, get_store_value, globals, group_outros, handle_promise, has_prop, identity, init, insert, insert_dev, intros, invalid_attribute_name_character, is_client, is_function, is_promise, listen, listen_dev, loop, loop_guard, missing_component, mount_component, noop, not_equal, now, null_to_empty, object_without_properties, onDestroy, onMount, once, outro_and_destroy_block, prevent_default, prop_dev, query_selector_all, raf, run, run_all, safe_not_equal, schedule_update, select_multiple_value, select_option, select_options, select_value, self, setContext, set_attributes, set_current_component, set_custom_element_data, set_data, set_data_dev, set_input_type, set_input_value, set_now, set_raf, set_store_value, set_style, set_svg_attributes, space, spread, stop_propagation, subscribe, svg_element, text, tick, time_ranges_to_array, to_number, toggle_class, transition_in, transition_out, update_keyed_each, validate_component, validate_each_argument, validate_each_keys, validate_slots, validate_store, xlink_attr };\n","<script>\n  import { onMount } from \"svelte\";\n  export let time;\n  onMount(() => {\n    fetch(`./Data.txt`)\n      .then(response => response.json())\n      .then(json => {\n        housieChart(json);\n      });\n  });\n\n  function housieChart(data) {\n    let x = 1;\n    let housieChart = document.getElementById(\"housie-chart\");\n    for (x; x < 91; x++) {\n      let span = document.createElement(\"span\");\n      span.classList.add(\"housie-chart-class\");\n      span.innerText = x;\n      housieChart.appendChild(span);\n    }\n    addToList(data);\n  }\n  function addToList(data) {\n    gaming(data);\n  }\n  function gaming(data){\n    if (time >= 90) {\n        return clearTimeout();\n      }\n      if (\n        time > document.getElementsByClassName(\"addedToList\").length &&\n        time <= 90\n      ) {\n        for (let j = 0; j < time; j++) {\n          document\n            .getElementsByClassName(\"housie-chart-class\")\n            [data[j] - 1].classList.add(\"addedToList\");\n        }\n      }\n      if (data.length > 0 && data.length < 90) {\n        document\n          .getElementsByClassName(\"housie-chart-class\")\n          [data[time]].classList.add(\"addedToList\");\n      }\n    setTimeout(()=>{\n      gaming(data)\n    }, 6500);\n      \n  }\n  \n  \n</script>\n\n<style>\n</style>\n\n\n<main id=\"housieContainer\" class=\"goLeft\">\n  <div id=\"housie-chart\" />\n</main>\n","<script>\n  let rewards = {\n    fastfive: 0,\n    fourcorners: 0,\n    bottomline: 0,\n    middleline: 0,\n    topline: 0,\n    fullhousie: 0,\n    username: \"Ayush\"\n  };\n  function createTicket() {\n    document.getElementsByClassName(\"housie-ticket-class\");\n    for (let a = 0; 27 > a; a++) {\n      let a = document.getElementById(\"housieTicket\"),\n        b = document.createElement(\"span\");\n      b.classList.add(\"notThis\");\n      b.addEventListener(\"click\", e => {\n        if (e.target.innerText != \"\") {\n          e.target.classList.toggle(\"selectedThis\");\n          e.target.classList.toggle(\"notThis\");\n        }\n      });\n    }\n    document.getElementsByClassName(\"housie-ticket-class\");\n    for (let a = 0; 27 > a; a++) {\n      let a = document.getElementById(\"housieTicket\"),\n        b = document.createElement(\"span\");\n      b.classList.add(\"notThis\");\n      b.addEventListener(\"click\", e => {\n        if (e.target.innerText != \"\") {\n          e.target.classList.toggle(\"selectedThis\");\n          e.target.classList.toggle(\"notThis\");\n        }\n      });\n      b.classList.add(\"housie-ticket-class\"),\n        (b.innerText = \"\"),\n        a.appendChild(b);\n    }\n    if (window.localStorage[\"arr1\"] !== undefined) {\n      let arr = JSON.parse(window.localStorage[\"arr\"]);\n      let arr1 = JSON.parse(window.localStorage[\"arr1\"]);\n      let a = document.getElementsByClassName(\"housie-ticket-class\");\n      for (let ad = 0; ad < arr.length; ad++) {\n        a[arr[ad]].innerHTML = arr1[ad];\n      }\n    }\n    priority();\n  }\n  function randomNoRepeatv2(min, max, arr, k) {\n    let num = min[k] + Math.floor(Math.random() * (max[k] - min[k]));\n    if (arr.includes(num)) {\n      return randomNoRepeatv2(min, max, arr, k);\n    }\n    return num;\n  }\n  function randomNoRepeat(counted, arr, k) {\n    let num =\n      counted[k] + Math.floor(Math.random() * (counted[k + 1] - counted[k]));\n    if (arr.includes(num)) {\n      return randomNoRepeat(counted, arr, k);\n    }\n    return num;\n  }\n  function priority() {\n    let a = document.getElementsByClassName(\"housie-ticket-class\"),\n      min = [1, 10, 20, 30, 40, 50, 60, 70, 80],\n      max = [9, 19, 29, 39, 49, 59, 69, 79, 89],\n      arr = [],\n      counted = [0, 9, 18, 27],\n      counterArr = [],\n      num,\n      arr1 = [];\n    if (\n      window.localStorage[\"arr\"] == undefined ||\n      window.localStorage[\"arr\"] == \"[]\"\n    ) {\n      for (let k = 0; k < 3; k++) {\n        for (let j = 0; j < 5; j++) {\n          arr.push(randomNoRepeat(counted, arr, k));\n        }\n      }\n      for (let ad = 0; ad < arr.length; ad++) {\n        for (let ak = 0; ak < 9; ak++) {\n          if (arr[ad] % 9 == ak) {\n            arr1.push(randomNoRepeatv2(min, max, arr1, ak));\n            a[arr[ad]].innerHTML = arr1[arr1.length - 1];\n          }\n        }\n      }\n    }\n    let f = [0, 9, 18];\n    for (let asd = 0; asd < 1; asd++) {\n      for (let kl = 0; kl < 9; kl++) {\n        {\n          if (\n            a[f[asd] + kl].innerHTML !== \"\" &&\n            a[f[asd + 1] + kl].innerHTML !== \"\"\n          ) {\n            if (a[f[asd] + kl].innerHTML > a[f[asd + 1] + kl].innerHTML) {\n              let temp = a[f[asd] + kl].innerHTML;\n              a[f[asd] + kl].innerHTML = a[f[asd + 1] + kl].innerHTML;\n              a[f[asd + 1] + kl].innerHTML = temp;\n            }\n          }\n          if (\n            a[f[asd] + kl].innerHTML !== \"\" &&\n            a[f[asd + 2] + kl].innerHTML !== \"\"\n          ) {\n            if (a[f[asd] + kl].innerHTML > a[f[asd + 2] + kl].innerHTML) {\n              let temp = a[f[asd] + kl].innerHTML;\n              a[f[asd] + kl].innerHTML = a[f[asd + 2] + kl].innerHTML;\n              a[f[asd + 2] + kl].innerHTML = temp;\n            }\n          }\n        }\n        if (\n          a[f[asd + 1] + kl].innerHTML !== \"\" &&\n          a[f[asd + 2] + kl].innerHTML !== \"\"\n        ) {\n          if (a[f[asd + 1] + kl].innerHTML > a[f[asd + 2] + kl].innerHTML) {\n            let temp = a[f[asd + 1] + kl].innerHTML;\n            a[f[asd + 1] + kl].innerHTML = a[f[asd + 2] + kl].innerHTML;\n            a[f[asd + 2] + kl].innerHTML = temp;\n          }\n        }\n      }\n    }\n    let i = 0;\n    for (let asdf = 0; asdf < 27; asdf++) {\n      if (a[asdf].innerText !== \"\") {\n        // console.log(i);\n        arr[i] = asdf;\n        arr1[i] = parseInt(a[asdf].innerText);\n        i++;\n      }\n    }\n    localStorage.setItem(\"arr\", JSON.stringify(arr));\n    localStorage.setItem(\"arr1\", JSON.stringify(arr1));\n  }\n  function checkHousie(num) {\n    let arr = [];\n    let arr2 = [];\n    let a = document.getElementsByClassName(\"selectedThis\");\n    let b = document.getElementsByClassName(\"addedToList\");\n    let button = document.getElementsByTagName(\"button\");\n    for (let ax = 0; ax < b.length; ax++) {\n      arr.push(parseInt(b[ax].innerHTML));\n    }\n    for (let ax = 0; ax < a.length; ax++) {\n      arr2.push(parseInt(a[ax].innerHTML));\n    }\n    let arr1 = JSON.parse(window.localStorage[\"arr1\"]);\n    let arrx = JSON.parse(window.localStorage[\"arr\"]);\n    if (num === 0) {\n      if (arr2.length >= 5) {\n        let counter = 0;\n        arr2.forEach(a => {\n          if (arr.includes(a)) {\n            counter++;\n          }\n        });\n        if (counter >= 5) {\n          rewards[\"fastfive\"] = 1;\n          button[num].disabled = true;\n        }\n      }\n    } else if (num === 1) {\n      let counter = 0;\n      let four = [0, 4, 10, 14];\n      for (let ij = 0; ij < arr2.length; ij++) {\n        if (arr.includes(arr2[ij]) && four.includes(arr1.indexOf(arr2[ij]))) {\n          counter++;\n        }\n        if (counter === 4) {\n          rewards[\"fourcorners\"] = 1;\n          button[num].disabled = true;\n        }\n      }\n    } else if (num === 2) {\n      let counter = 0;\n\n      let four = [0, 1, 2, 3, 4];\n      for (let ij = 0; ij < arr2.length; ij++) {\n        if (arr.includes(arr2[ij]) && four.includes(arr1.indexOf(arr2[ij]))) {\n          counter++;\n        }\n        if (counter === 4) {\n          rewards[\"topline\"] = 1;\n          button[num].disabled = true;\n        }\n      }\n    } else if (num === 3) {\n      let counter = 0;\n\n      let four = [5, 6, 7, 8, 9];\n      for (let ij = 0; ij < arr2.length; ij++) {\n        if (arr.includes(arr2[ij]) && four.includes(arr1.indexOf(arr2[ij]))) {\n          counter++;\n        }\n        if (counter === 4) {\n          rewards[\"middleline\"] = 1;\n          button[num].disabled = true;\n        }\n      }\n    } else if (num === 4) {\n      let counter = 0;\n\n      let four = [10, 11, 12, 13, 14];\n      for (let ij = 0; ij < arr2.length; ij++) {\n        if (arr.includes(arr2[ij]) && four.includes(arr1.indexOf(arr2[ij]))) {\n          counter++;\n        }\n        if (counter === 4) {\n          rewards[\"bottomline\"] = 1;\n          button[num].disabled = true;\n        }\n      }\n    } else if (num === 5) {\n      let counter = 0;\n      let four = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14];\n      for (let ij = 0; ij < arr2.length; ij++) {\n        if (arr.includes(arr2[ij]) && four.includes(arr1.indexOf(arr2[ij]))) {\n          counter++;\n        }\n        if (counter === 15) {\n          rewards[\"fullhousie\"] = 1;\n          button[num].disabled = true;\n        }\n      }\n    }\n  }\n  function noRepeatfunc(a, b, c, d) {\n    for (; !a.includes(b); ) return a.push(b), (c[d].innerText = b), a;\n    (b =\n      10 * (d % 9) +\n      1 +\n      Math.floor(Math.random() * (10 * (d % 9) + 10 - 10 * (d % 9)))),\n      noRepeatfunc(a, b, c, d);\n  }\n  //  function loadDoc() {\n  //   var xhttp = new XMLHttpRequest();\n  //   xhttp.onreadystatechange = function() {\n  //     if (this.readyState == 4 && this.status == 200) {\n  //       cookiesSet();\n  //     }\n  //   };\n  //   xhttp.open(\"POST\", \"./rewardsHousie.php\", true);\n  //   xhttp.setRequestHeader(\"Content-type\", \"application/json\");\n  //   xhttp.send(JSON.stringify(rewards));\n  // }\n  // setInterval(() => {\n  //   console.log(loadDoc());\n  // }, 1000);\n</script>\n\n<style>\n\n</style>\n\n<main id=\"housieTicket\" on:load={createTicket()} />\n<div id=\"rewards\">\n  <button on:click={() => checkHousie(0)}>Fast Five</button>\n  <button on:click={() => checkHousie(1)}>Four Corners</button>\n  <button on:click={() => checkHousie(2)}>Top Line</button>\n  <button on:click={() => checkHousie(3)}>Middle Line</button>\n  <button on:click={() => checkHousie(4)}>Bottom Line</button>\n  <button on:click={() => checkHousie(5)}>Full Housie</button>\n</div>\n","<script>\n  import HousieChart from \"./HousieChart.svelte\";\n  import HousieTicket from \"./HousieTicket.svelte\";\n  import { onMount } from \"svelte\";\n  onMount(() => {\n    fetch(`./Data.txt`)\n      .then(response => response.json())\n      .then(json => {\n        housieNumber(json);\n      });\n  });\n  function logOut() {\n    localStorage.removeItem(\"arr\");\n    localStorage.removeItem(\"arr1\");\n    document.cookie = \"1=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n    document.getElementById(\"overflowInvisible\").style.display = \"none\";\n    document.getElementById(\"login\").style.display = \"block\";\n    location.reload(true);\n  }\n  var d = new Date();\n  var n = (d.getMinutes() % 10) * 60 + d.getSeconds();\n  let i = Math.ceil(n / 6.5);\n  function housieNumber(num) {\n    gaming(num);\n  }\n  function goLeft() {\n    document.getElementById(\"housieContainer\").classList.toggle(\"goLeft\");\n    document.getElementsByTagName(\"main\")[0].classList.toggle(\"makeItSmall\");\n  }\n  let counter = 0;\n\n  function gaming(num) {\n    let span = document.createElement(\"span\");\n    span.classList.add(\"housie-number\");\n    if (document.getElementsByClassName(\"housie-number\").length === 1) {\n      document.getElementsByClassName(\"housie-number\")[0].remove();\n    }\n    let housieNumberVar = document.getElementById(\"housie-number-container\");\n    let span1 = document.createElement(\"span\");\n    let old = document.getElementsByClassName(\"housie-number-old\");\n    if (old.length === 4) {\n      old[0].remove();\n    }\n    if (num[i - 2] == undefined) {\n    } else {\n      span1.innerText = num[i - 2];\n      span1.classList.add(\"housie-number-old\");\n      housieNumberVar.appendChild(span1);\n    }\n    if (num[i - 1] == undefined) {\n    } else {\n      span.innerText = num[i - 1];\n      housieNumberVar.appendChild(span);\n    }\n    if (span) i++;\n    if (i > 91) {\n      housieNumberVar.innerText=\"Adios, Refreshing in 15 seconds\";\n      for (var j = old.length - 1; j >= 0; --j) {\n        old[j].remove();\n      }\n      localStorage.removeItem(\"arr\");\n      localStorage.removeItem(\"arr1\");\n      document.cookie = \"1=; expires=Thu, 01 Jan 1970 00:00:00 UTC; path=/;\";\n      alert(\n        \"The Ongoing Game is Over\\nGet Refreshed as its going to start again in 15 seconds\"\n      );\n      setTimeout(() => {\n        location.reload(true);\n      }, 14000);\n    } else {\n      setTimeout(() => {\n        gaming(num);\n      }, 6500);\n    }\n  }\n</script>\n\n<main>\n  <nav>\n    <ul>\n      <li on:click={goLeft}>\n        <div id=\"bringItLeft\">Chart</div>\n      </li>\n      <li on:click={logOut}>\n        <div>Logout</div>\n      </li>\n    </ul>\n  </nav>\n\n  <div id=\"housie-number-container\" />\n  <HousieTicket />\n</main>\n<HousieChart time={i} />\n","import App from './App.svelte';\n\nconst app = new App({\n\ttarget: document.getElementById(\"overflowInvisible\"),\n});\n\nexport default app;\n"],"names":["noop","run","fn","blank_object","Object","create","run_all","fns","forEach","is_function","thing","safe_not_equal","a","b","append","target","node","appendChild","insert","anchor","insertBefore","detach","parentNode","removeChild","element","name","document","createElement","space","data","createTextNode","listen","event","handler","options","addEventListener","removeEventListener","attr","attribute","value","removeAttribute","getAttribute","setAttribute","current_component","set_current_component","component","onMount","Error","get_current_component","$$","on_mount","push","dirty_components","binding_callbacks","render_callbacks","flush_callbacks","resolved_promise","Promise","resolve","update_scheduled","add_render_callback","flushing","seen_callbacks","Set","flush","i","length","update","pop","callback","has","add","clear","fragment","before_update","dirty","p","ctx","after_update","outroing","transition_in","block","local","delete","transition_out","o","outros","c","d","create_component","mount_component","on_destroy","m","new_on_destroy","map","filter","destroy_component","detaching","make_dirty","then","fill","init","instance","create_fragment","not_equal","props","parent_component","prop_values","bound","context","Map","callbacks","ready","ret","rest","hydrate","nodes","Array","from","childNodes","children","l","intro","SvelteComponent","[object Object]","this","$destroy","type","index","indexOf","splice","time","fetch","response","json","x","housieChart","getElementById","span","classList","innerText","gaming","clearTimeout","getElementsByClassName","j","setTimeout","addToList","createTicket","e","toggle","undefined","window","localStorage","arr","JSON","parse","arr1","ad","innerHTML","min","max","counted","k","randomNoRepeat","ak","randomNoRepeatv2","f","asd","kl","temp","asdf","parseInt","setItem","stringify","priority","num","Math","floor","random","includes","rewards","fastfive","fourcorners","bottomline","middleline","topline","fullhousie","username","checkHousie","arr2","button","getElementsByTagName","ax","counter","disabled","four","ij","goLeft","logOut","removeItem","cookie","style","display","location","reload","remove","housieNumberVar","span1","old","alert","Date","n","getMinutes","getSeconds","ceil"],"mappings":"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"}